name: "VGG16"  


## Training Stage
layer { name: "left_data" type: "ImageData" top: "left_data" top: "label" 
	include { phase: TRAIN } 
	transform_param { mirror: true mean_value: 26.0917  mean_value: 48.3404 mean_value: 76.3456 } 
	#transform_param { mirror: true mean_value: 39.5817  mean_value: 72.4559 mean_value: 113.2623 } 
	image_data_param {
        source: "/home/lining/dataset/OIA-ODIR/odir_v1/odir_origin/left_train_db_label.txt"
		root_folder: "/home/lining/dataset/OIA-ODIR/odir_v1/odir_origin/train_set/"
        batch_size: 2
        new_height: 224
		new_width: 224
		shuffle: true
		shuffle_same: true
		label_dim: 8
    }
}
layer { name: "right_data" type: "ImageData" top: "right_data" top: "redundancy_label" 
	include { phase: TRAIN } 
	transform_param { mirror: true mean_value: 26.0917  mean_value: 48.3404 mean_value: 76.3456 } 
	#transform_param { mirror: true mean_value: 39.5817  mean_value: 72.4559 mean_value: 113.2623 } 
	image_data_param {
        source: "/home/lining/dataset/OIA-ODIR/odir_v1/odir_origin/right_train_db_label.txt"
		root_folder: "/home/lining/dataset/OIA-ODIR/odir_v1/odir_origin/train_set/"
        batch_size: 2
        new_height: 224
		new_width: 224
		shuffle: true
		shuffle_same: true
		label_dim: 8
    }
}
layer{ name: "silence_redundancy_label" type: "Silence" bottom: "redundancy_label" include: { phase: TRAIN } }

## Test Stage
layer { name: "left_data" type: "ImageData" top: "left_data" top: "label"
    include { phase: TEST }
	transform_param { mirror: true mean_value: 26.0917  mean_value: 48.3404 mean_value: 76.3456 } 
	#transform_param { mirror: false mean_value: 39.5817  mean_value: 72.4559 mean_value: 113.2623 } 
    image_data_param {
        source: "/home/lining/dataset/OIA-ODIR/odir_v1/odir_origin/left_offtest_db_label.txt"
		root_folder: "/home/lining/dataset/OIA-ODIR/odir_v1/odir_origin/off_test/"
        batch_size: 2
        new_height: 224
		new_width: 224
		shuffle: false
		label_dim: 8
    }
}
layer { name: "right_data" type: "ImageData" top: "right_data" top: "redundancy_label"
    include { phase: TEST }
	transform_param { mirror: true mean_value: 26.0917  mean_value: 48.3404 mean_value: 76.3456 } 
	#transform_param { mirror: false mean_value: 39.5817  mean_value: 72.4559 mean_value: 113.2623 } 
    image_data_param {
        source: "/home/lining/dataset/OIA-ODIR/odir_v1/odir_origin/right_offtest_db_label.txt"
		root_folder: "/home/lining/dataset/OIA-ODIR/odir_v1/odir_origin/off_test/"
        batch_size: 2
        new_height: 224
		new_width: 224
		shuffle: false
		label_dim: 8
    }
}
layer{ name: "silence_redundancy_label" type: "Silence" bottom: "redundancy_label" include: { phase: TEST } }


# concat left and right eyes
layer {
  name: "concat_data"
  type: "Concat"
  bottom: "left_data"
  bottom: "right_data"
  top: "data"
  concat_param {
    concat_dim: 0
	#axis: 0
  }
}


# Slice Layer
layer {
	name: "slice_label"
	type: "Slice"
	bottom: "label"
	top: "label_1"
	top: "label_2"
	top: "label_3"
	top: "label_4"
	top: "label_5"
	top: "label_6"
	top: "label_7"
	top: "label_8"
	slice_param {
		axis: 1
		slice_point: 1
		slice_point: 2
		slice_point: 3
		slice_point: 4
		slice_point: 5
		slice_point: 6
		slice_point: 7
	}
}

layer {  
  bottom: "data"  
  top: "conv1_1"  
  name: "conv1_1"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 64  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv1_1"  
  top: "conv1_1"  
  name: "relu1_1"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv1_1"  
  top: "conv1_2"  
  name: "conv1_2"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 64  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv1_2"  
  top: "conv1_2"  
  name: "relu1_2"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv1_2"  
  top: "pool1"  
  name: "pool1"  
  type: "Pooling"  
  pooling_param {  
    pool: MAX  
    kernel_size: 2  
    stride: 2  
  }  
}  
layer {  
  bottom: "pool1"  
  top: "conv2_1"  
  name: "conv2_1"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 128  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv2_1"  
  top: "conv2_1"  
  name: "relu2_1"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv2_1"  
  top: "conv2_2"  
  name: "conv2_2"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 128  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv2_2"  
  top: "conv2_2"  
  name: "relu2_2"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv2_2"  
  top: "pool2"  
  name: "pool2"  
  type: "Pooling"  
  pooling_param {  
    pool: MAX  
    kernel_size: 2  
    stride: 2  
  }  
}  
layer {  
  bottom: "pool2"  
  top: "conv3_1"  
  name: "conv3_1"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 256  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv3_1"  
  top: "conv3_1"  
  name: "relu3_1"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv3_1"  
  top: "conv3_2"  
  name: "conv3_2"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 256  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv3_2"  
  top: "conv3_2"  
  name: "relu3_2"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv3_2"  
  top: "conv3_3"  
  name: "conv3_3"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 256  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv3_3"  
  top: "conv3_3"  
  name: "relu3_3"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv3_3"  
  top: "pool3"  
  name: "pool3"  
  type: "Pooling"  
  pooling_param {  
    pool: MAX  
    kernel_size: 2  
    stride: 2  
  }  
}  
layer {  
  bottom: "pool3"  
  top: "conv4_1"  
  name: "conv4_1"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 512  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv4_1"  
  top: "conv4_1"  
  name: "relu4_1"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv4_1"  
  top: "conv4_2"  
  name: "conv4_2"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 512  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv4_2"  
  top: "conv4_2"  
  name: "relu4_2"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv4_2"  
  top: "conv4_3"  
  name: "conv4_3"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 512  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv4_3"  
  top: "conv4_3"  
  name: "relu4_3"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv4_3"  
  top: "pool4"  
  name: "pool4"  
  type: "Pooling"  
  pooling_param {  
    pool: MAX  
    kernel_size: 2  
    stride: 2  
  }  
}  
layer {  
  bottom: "pool4"  
  top: "conv5_1"  
  name: "conv5_1"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 512  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv5_1"  
  top: "conv5_1"  
  name: "relu5_1"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv5_1"  
  top: "conv5_2"  
  name: "conv5_2"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 512  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv5_2"  
  top: "conv5_2"  
  name: "relu5_2"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv5_2"  
  top: "conv5_3"  
  name: "conv5_3"  
  type: "Convolution"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  convolution_param {  
    num_output: 512  
    pad: 1  
    kernel_size: 3  
    weight_filler {  
      type: "gaussian"  
      std: 0.01  
    }  
    bias_filler {  
      type: "constant"  
      value: 0  
    }  
  }  
}  
layer {  
  bottom: "conv5_3"  
  top: "conv5_3"  
  name: "relu5_3"  
  type: "ReLU"  
}  
layer {  
  bottom: "conv5_3"  
  top: "pool5"  
  name: "pool5"  
  type: "Pooling"  
  pooling_param {  
    pool: MAX  
    kernel_size: 2  
    stride: 2  
  }  
}  
layer {  
  bottom: "pool5"  
  top: "fc6"  
  name: "fc6"  
  type: "InnerProduct"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  inner_product_param {  
    num_output: 4096  
    weight_filler {  
      type: "gaussian"  
      std: 0.005  
    }  
    bias_filler {  
      type: "constant"  
      value: 0.1  
    }  
  }  
}  
layer {  
  bottom: "fc6"  
  top: "fc6"  
  name: "relu6"  
  type: "ReLU"  
}  
layer {  
  bottom: "fc6"  
  top: "fc6"  
  name: "drop6"  
  type: "Dropout"  
  dropout_param {  
    dropout_ratio: 0.5  
  }  
}  
layer {  
  bottom: "fc6"  
  top: "fc7"  
  name: "fc7"  
  type: "InnerProduct"  
  param {  
    lr_mult: 1  
    decay_mult: 1  
  }  
  param {  
    lr_mult: 2  
    decay_mult: 0  
  }  
  inner_product_param {  
    num_output: 4096  
    weight_filler {  
      type: "gaussian"  
      std: 0.005  
    }  
    bias_filler {  
      type: "constant"  
      value: 0.1  
    }  
  }  
}  
layer {  
  bottom: "fc7"  
  top: "fc7"  
  name: "relu7"  
  type: "ReLU"  
}  
layer {  
  bottom: "fc7"  
  top: "fc7"  
  name: "drop7"  
  type: "Dropout"  
  dropout_param {  
    dropout_ratio: 0.5  
  }  
}  
#layer {  
#  bottom: "fc7"  
#  top: "fc8"  
#  name: "fc_8"  
#  type: "InnerProduct"  
#  param {  
#    lr_mult: 1  
#    decay_mult: 1  
#  }  
#  param {  
#    lr_mult: 2  
#    decay_mult: 0  
#  }  
#  inner_product_param {  
#    num_output: 10  
#    weight_filler {  
#      type: "gaussian"  
#      std: 0.005  
#    }  
#    bias_filler {  
#      type: "constant"  
#      value: 0.1  
#    }  
#  }  
#}  

# Slice Feature
layer {
	name: "slice_feature"
	type: "Slice"
	bottom: "fc7"
	top: "fc7_1_left"
	top: "fc7_2_left"
	top: "fc7_1_right"
	top: "fc7_2_right"
	slice_param {
		axis: 0
		slice_point: 1
		slice_point: 2
		slice_point: 3
	}
}

## concat left and right features
#layer {
#  name: "concat_fc7_1"
#  type: "Concat"
#  bottom: "fc7_1_left"
#  bottom: "fc7_1_right"
#  top: "fc7_1"
#  concat_param {
#    concat_dim: 1
#	#axis: 1
#  }
#}
#layer {
#  name: "concat_fc7_2"
#  type: "Concat"
#  bottom: "fc7_2_left"
#  bottom: "fc7_2_right"
#  top: "fc7_2"
#  concat_param {
#    concat_dim: 1
#	#axis: 1
#  }
#}
layer { name: "eltwise_fc7_1" type: "Eltwise" bottom: "fc7_1_left" bottom: "fc7_1_right" top: "fc7_1" 
	eltwise_param { 
		operation: SUM 
		#operation: PROD 
	} 
}
layer { name: "eltwise_fc7_2" type: "Eltwise" bottom: "fc7_2_left" bottom: "fc7_2_right" top: "fc7_2" 
	eltwise_param { 
		operation: SUM 
		#operation: PROD 
	} 
}
layer {
  name: "concat_fc7"
  type: "Concat"
  bottom: "fc7_1"
  bottom: "fc7_2"
  top: "fc8"
  concat_param {
    concat_dim: 0
	#axis: 0
  }
}

#layer { name: "conv_fuse" type: "Convolution" bottom: "fc8" top: "fc8" convolution_param { num_output: 8192 kernel_size: 1 } }

layer {name: "ip_1" type: "InnerProduct" bottom: "fc8" top: "ip_1" param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 } inner_product_param { num_output: 2 weight_filler {type: "gaussian" std: 0.005 } bias_filler { type: "constant" value: 0.1 } } }

layer {name: "ip_2" type: "InnerProduct" bottom: "fc8" top: "ip_2" param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 } inner_product_param { num_output: 2 weight_filler {type: "gaussian" std: 0.005 } bias_filler { type: "constant" value: 0.1 } } }

layer {name: "ip_3" type: "InnerProduct" bottom: "fc8" top: "ip_3" param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 } inner_product_param { num_output: 2 weight_filler {type: "gaussian" std: 0.005 } bias_filler { type: "constant" value: 0.1 } } }

layer {name: "ip_4" type: "InnerProduct" bottom: "fc8" top: "ip_4" param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 } inner_product_param { num_output: 2 weight_filler {type: "gaussian" std: 0.005 } bias_filler { type: "constant" value: 0.1 } } }

layer {name: "ip_5" type: "InnerProduct" bottom: "fc8" top: "ip_5" param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 } inner_product_param { num_output: 2 weight_filler {type: "gaussian" std: 0.005 } bias_filler { type: "constant" value: 0.1 } } }

layer {name: "ip_6" type: "InnerProduct" bottom: "fc8" top: "ip_6" param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 } inner_product_param { num_output: 2 weight_filler {type: "gaussian" std: 0.005 } bias_filler { type: "constant" value: 0.1 } } }

layer {name: "ip_7" type: "InnerProduct" bottom: "fc8" top: "ip_7" param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 } inner_product_param { num_output: 2 weight_filler {type: "gaussian" std: 0.005 } bias_filler { type: "constant" value: 0.1 } } }

layer {name: "ip_8" type: "InnerProduct" bottom: "fc8" top: "ip_8" param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0 } inner_product_param { num_output: 2 weight_filler {type: "gaussian" std: 0.005 } bias_filler { type: "constant" value: 0.1 } } }

layer { name: "loss1" type: "SoftmaxWithLoss" bottom: "ip_1" bottom: "label_1" top: "loss1" }
layer { name: "accuracy1" type: "Accuracy" bottom: "ip_1" bottom: "label_1" top: "accuracy1" accuracy_param { top_k: 1 } include { phase: TEST } }
layer { name: "confusion_matrix_1" type: "ConfusionMatrix" bottom: "ip_1" bottom: "label_1" top: "confusion_matrix_1" include { phase: TEST } }

layer { name: "loss2" type: "SoftmaxWithLoss" bottom: "ip_2" bottom: "label_2" top: "loss2" }
layer { name: "accuracy2" type: "Accuracy" bottom: "ip_2" bottom: "label_2" top: "accuracy2" accuracy_param { top_k: 1 } include { phase: TEST } }
layer { name: "confusion_matrix_2" type: "ConfusionMatrix" bottom: "ip_2" bottom: "label_2" top: "confusion_matrix_2" include { phase: TEST } }

layer { name: "loss3" type: "SoftmaxWithLoss" bottom: "ip_3" bottom: "label_3" top: "loss3" }
layer { name: "accuracy3" type: "Accuracy" bottom: "ip_3" bottom: "label_3" top: "accuracy3" accuracy_param { top_k: 1 } include { phase: TEST } }
layer { name: "confusion_matrix_3" type: "ConfusionMatrix" bottom: "ip_3" bottom: "label_3" top: "confusion_matrix_3" include { phase: TEST } }

layer { name: "loss4" type: "SoftmaxWithLoss" bottom: "ip_4" bottom: "label_4" top: "loss4" }
layer { name: "accuracy4" type: "Accuracy" bottom: "ip_4" bottom: "label_4" top: "accuracy4" accuracy_param { top_k: 1 } include { phase: TEST } }
layer { name: "confusion_matrix_4" type: "ConfusionMatrix" bottom: "ip_4" bottom: "label_4" top: "confusion_matrix_4" include { phase: TEST } }

layer { name: "loss5" type: "SoftmaxWithLoss" bottom: "ip_5" bottom: "label_5" top: "loss5" }
layer { name: "accuracy5" type: "Accuracy" bottom: "ip_5" bottom: "label_5" top: "accuracy5" accuracy_param { top_k: 1 } include { phase: TEST } }
layer { name: "confusion_matrix_5" type: "ConfusionMatrix" bottom: "ip_5" bottom: "label_5" top: "confusion_matrix_5" include { phase: TEST } }

layer { name: "loss6" type: "SoftmaxWithLoss" bottom: "ip_6" bottom: "label_6" top: "loss6" }
layer { name: "accuracy6" type: "Accuracy" bottom: "ip_6" bottom: "label_6" top: "accuracy6" accuracy_param { top_k: 1 } include { phase: TEST } }
layer { name: "confusion_matrix_6" type: "ConfusionMatrix" bottom: "ip_6" bottom: "label_6" top: "confusion_matrix_6" include { phase: TEST } }

layer { name: "loss7" type: "SoftmaxWithLoss" bottom: "ip_7" bottom: "label_7" top: "loss7" }
layer { name: "accuracy7" type: "Accuracy" bottom: "ip_7" bottom: "label_7" top: "accuracy7" accuracy_param { top_k: 1 } include { phase: TEST } }
layer { name: "confusion_matrix_7" type: "ConfusionMatrix" bottom: "ip_7" bottom: "label_7" top: "confusion_matrix_7" include { phase: TEST } }

layer { name: "loss8" type: "SoftmaxWithLoss" bottom: "ip_8" bottom: "label_8" top: "loss8" }
layer { name: "accuracy8" type: "Accuracy" bottom: "ip_8" bottom: "label_8" top: "accuracy8" accuracy_param { top_k: 1 } include { phase: TEST } }
layer { name: "confusion_matrix_8" type: "ConfusionMatrix" bottom: "ip_8" bottom: "label_8" top: "confusion_matrix_8" include { phase: TEST } }

